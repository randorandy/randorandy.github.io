class DotNetRandom{MBIG=2147483647;MSEED=161803398;inext;inextp;SeedArray=new Array(56);constructor(Seed){var ii,Seed=-2147483648==Seed?2147483647:Math.abs(Seed);let mj=this.MSEED-Seed,mk=(this.SeedArray[55]=mj,1);for(let i=1;i<55;i++)ii=21*i%55,this.SeedArray[ii]=mk,(mk=mj-mk)<0&&(mk+=this.MBIG),mj=this.SeedArray[ii];for(let k=1;k<5;k++)for(let i=1;i<56;i++)this.SeedArray[i]-=this.SeedArray[1+(i+30)%55],this.SeedArray[i]<0&&(this.SeedArray[i]+=this.MBIG);this.inext=0,this.inextp=21}Sample(){return this.InternalSample()*(1/this.MBIG)}InternalSample(){let locINext=this.inext,locINextp=this.inextp,retVal=(56<=++locINext&&(locINext=1),56<=++locINextp&&(locINextp=1),this.SeedArray[locINext]-this.SeedArray[locINextp]);return retVal==this.MBIG&&retVal--,retVal<0&&(retVal+=this.MBIG),this.SeedArray[locINext]=retVal,this.inext=locINext,this.inextp=locINextp,retVal}Next(){return this.InternalSample()}GetSampleForLargeRange(){let result=this.InternalSample();var negative=this.InternalSample()%2==0,negative=result=negative?-result:result;return(negative=(negative+=this.MBIG-1)/(2*this.MBIG-1))<0&&console.log("negative"),negative}NextInRange(minValue,maxValue){var methodName="DotNetRandom::Next(minValue,maxValue)",methodName=(maxValue<minValue&&console.log(methodName+" = min greater than max"),Number.isInteger(minValue)||console.log(methodName+" = min is non-integer"),Number.isInteger(maxValue)||console.log(methodName+" = max is non-integer"),maxValue-minValue);return methodName<=this.MBIG?Math.floor(this.Sample()*methodName)+minValue:Math.floor(this.GetSampleForLargeRange()*methodName)+minValue}Next(maxValue){return maxValue<0&&console.log("DotNetRandom::Next() = max is less than zero"),Number.isInteger(maxValue)||console.log("DotNetRandom::Next() = max is non-integer"),Math.floor(this.Sample()*maxValue)}NextDouble(){return Sample()}}const Area=Object.freeze({Crateria:0,BlueBrinstar:1,GreenBrinstar:2,PinkBrinstar:3,RedBrinstar:4,Kraid:5,Crocomire:6,WreckedShip:7,EastMaridia:8,WestMaridia:9,UpperNorfair:10,LowerNorfair:11});class Location{constructor(address,modifier,area,name){this.address=address,this.modifier=modifier,this.area=area,this.name=name}GetNameArray(){for(var nameArray=new Uint8Array(64),upperName=" "+this.name.toUpperCase().padStart(30,".")+" ",i=0;i<upperName.length;i++){var charCode,idx=2*i;" "==upperName[i]?(nameArray[1+idx]=0,nameArray[idx]=127):(charCode=upperName.charCodeAt(i)-65,"."==upperName[i]?charCode=26:","==upperName[i]&&(charCode=27),nameArray[1+idx]=24,nameArray[idx]=charCode)}return nameArray}GetItemBytes(itemCode){itemCode+=this.modifier;return new Uint8Array([255&itemCode,itemCode>>8&255])}GetItemCode(bytes){return(bytes[this.address+1]<<8&65280|255&bytes[this.address])-this.modifier}}const loc=(addr,modifier,area,id,name)=>new Location(addr,modifier,area,name),getLocations=()=>[loc(493278,0,Area.BlueBrinstar,1,"Morphing Ball"),loc(491980,0,Area.Crateria,2,"Landing Site (PBs)"),loc(492008,0,Area.Crateria,3,"Ocean (Missiles)"),loc(492014,168,Area.WreckedShip,4,"Sky (Missiles)"),loc(492020,0,Area.Crateria,5,"Outside WS Middle (Missiles)"),loc(492104,0,Area.Crateria,6,"Moat (Missiles)"),loc(492132,0,Area.Crateria,7,"Energy Tank, Gauntlet"),loc(492526,0,Area.Crateria,8,"Missile (Crateria Bottom)"),loc(492548,84,Area.Crateria,9,"Bomb"),loc(492594,0,Area.Crateria,10,"Energy Tank, Terminator"),loc(492644,0,Area.Crateria,11,"Gauntlet Right (Missiles)"),loc(492650,0,Area.Crateria,12,"Gauntlet Left (Missiles)"),loc(492664,0,Area.Crateria,13,"Climb (Supers)"),loc(492678,0,Area.Crateria,14,"Missile (Crateria Middle)"),loc(492716,84,Area.GreenBrinstar,15,"Etecoons (PBs)"),loc(492772,84,Area.PinkBrinstar,16,"Spo Spo (Supers)"),loc(492824,0,Area.GreenBrinstar,17,"Early Supers Bridge"),loc(492830,0,Area.GreenBrinstar,18,"Early Supers"),loc(492844,84,Area.GreenBrinstar,19,"Reserve Tank, Brinstar"),loc(492850,168,Area.GreenBrinstar,20,"Brinstar Reserve 2 (Missiles)"),loc(492856,0,Area.GreenBrinstar,21,"Brinstar Reserve 1 (Missiles)"),loc(493064,0,Area.PinkBrinstar,22,"Big Pink (Missiles)"),loc(493070,0,Area.PinkBrinstar,23,"Charge (Missiles)"),loc(493076,84,Area.PinkBrinstar,24,"Charge Beam"),loc(493148,0,Area.PinkBrinstar,25,"Mission Impossible (PBs)"),loc(493174,0,Area.GreenBrinstar,26,"Tube (Missiles)"),loc(493388,0,Area.BlueBrinstar,27,"Blue PBs"),loc(493464,0,Area.BlueBrinstar,28,"Beta Missiles"),loc(493470,168,Area.BlueBrinstar,29,"Energy Tank, Brinstar Ceiling"),loc(493506,0,Area.GreenBrinstar,30,"Energy Tank, Etecoons"),loc(493520,0,Area.GreenBrinstar,31,"Etecoons (Supers)"),loc(493562,0,Area.PinkBrinstar,32,"Energy Tank, Waterway"),loc(493570,84,Area.BlueBrinstar,33,"Alpha Missiles"),loc(493604,0,Area.PinkBrinstar,34,"Energy Tank, Brinstar Gate"),loc(493622,0,Area.BlueBrinstar,35,"Billy Mays 1"),loc(493628,168,Area.BlueBrinstar,36,"Billy Mays 2"),loc(493686,84,Area.RedBrinstar,37,"Xray Scope"),loc(493770,0,Area.RedBrinstar,38,"Beta PBs"),loc(493838,84,Area.RedBrinstar,39,"Alpha PBs"),loc(493844,0,Area.RedBrinstar,40,"Alpha PBs (Missiles)"),loc(493934,84,Area.RedBrinstar,41,"Spazer"),loc(493980,168,Area.Kraid,42,"Energy Tank, Kraid"),loc(494060,168,Area.Kraid,43,"Kraid Missiles"),loc(494282,84,Area.Kraid,44,"Varia Suit"),loc(494308,168,Area.UpperNorfair,45,"Cathedral Missiles"),loc(494372,84,Area.UpperNorfair,46,"Ice Beam"),loc(494406,168,Area.UpperNorfair,47,"Southern Missiles"),loc(494500,0,Area.Crocomire,48,"Energy Tank, Crocomire"),loc(494508,84,Area.UpperNorfair,49,"HiJump Boots"),loc(494528,0,Area.UpperNorfair,50,"Croc Escape"),loc(494566,0,Area.UpperNorfair,51,"HJB (Missiles)"),loc(494572,0,Area.UpperNorfair,52,"Energy Tank, Hi-Jump Boots"),loc(494596,0,Area.Crocomire,53,"Croc PBs"),loc(494612,0,Area.Crocomire,54,"Cosine Missiles"),loc(494634,0,Area.Crocomire,55,"Indiana Jones"),loc(494646,84,Area.Crocomire,56,"Grapple Beam"),loc(494654,84,Area.UpperNorfair,57,"Reserve Tank, Norfair"),loc(494660,168,Area.UpperNorfair,58,"Norfair Reserve 2 (Missiles)"),loc(494674,0,Area.UpperNorfair,59,"Norfair Reserve 1 (Missiles)"),loc(494694,0,Area.UpperNorfair,60,"Bubble Mountain Missiles"),loc(494708,168,Area.UpperNorfair,61,"Speed Missiles"),loc(494722,84,Area.UpperNorfair,62,"Speed Booster"),loc(494780,0,Area.UpperNorfair,63,"Wave Missiles"),loc(494794,84,Area.UpperNorfair,64,"Wave Beam"),loc(495214,0,Area.LowerNorfair,65,"GT Missiles"),loc(495220,168,Area.LowerNorfair,66,"GT Supers"),loc(495408,0,Area.LowerNorfair,67,"Mickey Mouse Missiles"),loc(495562,0,Area.LowerNorfair,68,"Maze Missiles"),loc(495570,0,Area.LowerNorfair,69,"Maze PBs"),loc(495808,0,Area.LowerNorfair,70,"PBs of Shame"),loc(495872,0,Area.LowerNorfair,71,"3 Muskateers"),loc(495880,168,Area.LowerNorfair,72,"Energy Tank, Ridley"),loc(495888,84,Area.LowerNorfair,73,"Screw Attack"),loc(496004,0,Area.LowerNorfair,74,"Energy Tank, Firefleas"),loc(508517,0,Area.WreckedShip,75,"Spooky Missiles"),loc(508649,84,Area.WreckedShip,76,"Reserve Tank, Wrecked Ship"),loc(508655,0,Area.WreckedShip,77,"WS Reserve Missiles"),loc(508697,0,Area.WreckedShip,78,"WS Attic Missiles"),loc(508727,0,Area.WreckedShip,79,"Energy Tank, Wrecked Ship"),loc(508759,0,Area.WreckedShip,80,"WS Supers Left"),loc(508773,0,Area.WreckedShip,81,"Right Super, Wrecked Ship"),loc(508781,84,Area.WreckedShip,82,"Gravity Suit"),loc(508983,0,Area.WestMaridia,83,"Mainstreet Missiles"),loc(508989,0,Area.WestMaridia,84,"Crab Supers"),loc(509053,0,Area.WestMaridia,85,"Energy Tank, Mama Turtle"),loc(509059,168,Area.WestMaridia,86,"Mama Turtle Missiles"),loc(509103,0,Area.WestMaridia,87,"Watering Hole Supers"),loc(509109,0,Area.WestMaridia,88,"Watering Hole Missiles"),loc(509235,0,Area.WestMaridia,89,"Beach Missiles"),loc(509273,84,Area.EastMaridia,90,"Plasma Beam"),loc(509405,0,Area.EastMaridia,91,"Left Sand Pit (Missiles)"),loc(509411,84,Area.EastMaridia,92,"Reserve Tank, Maridia"),loc(509419,0,Area.EastMaridia,93,"Right Sand Pit (Missiles)"),loc(509425,0,Area.EastMaridia,94,"Right Sand Pit (PBs)"),loc(509443,0,Area.EastMaridia,95,"Aquaduct Missiles"),loc(509449,0,Area.EastMaridia,96,"Aquaduct Supers"),loc(509669,84,Area.EastMaridia,97,"Spring Ball"),loc(509773,168,Area.EastMaridia,98,"Precious Missiles"),loc(509781,0,Area.EastMaridia,99,"Energy Tank, Botwoon"),loc(509863,84,Area.EastMaridia,100,"Space Jump")],Item=Object.freeze({EnergyTank:61143,Missile:61147,Super:61151,PowerBomb:61155,Bombs:61159,Charge:61163,Ice:61167,HJB:61171,Speed:61175,Wave:61179,Spazer:61183,SpringBall:61187,Varia:61191,Plasma:61203,Grapple:61207,Morph:61219,Reserve:61223,Gravity:61195,Xray:61199,SpaceJump:61211,ScrewAttack:61215,DoubleJump:61408,PressureValve:61416,HeatShield:61412,BeamUpgrade:61420}),ItemNames=new Map([[Item.EnergyTank,"Energy Tank"],[Item.Missile,"Missile"],[Item.Super,"Super Missile"],[Item.PowerBomb,"Power Bomb"],[Item.Bombs,"Bomb"],[Item.Charge,"Charge Beam"],[Item.Ice,"Ice Beam"],[Item.HJB,"HiJump Boots"],[Item.Speed,"Speed Booster"],[Item.Wave,"Wave Beam"],[Item.Spazer,"Spazer"],[Item.SpringBall,"Spring Ball"],[Item.Varia,"Varia Suit"],[Item.Plasma,"Plasma Beam"],[Item.Grapple,"Grappling Beam"],[Item.Morph,"Morph Ball"],[Item.Reserve,"Reserve Tank"],[Item.Gravity,"Gravity Suit"],[Item.Xray,"Xray Scope"],[Item.SpaceJump,"Space Jump"],[Item.ScrewAttack,"Screw Attack"],[Item.DoubleJump,"Double Jump"],[Item.PressureValve,"Pressure Valve"],[Item.HeatShield,"Heat Shield"],[Item.BeamUpgrade,"Beam Upgrade"]]),itemNameToBytes=name=>{for(var nameArray=new Uint8Array(64),upperName=" "+name.toUpperCase().padEnd(31," "),i=0;i<upperName.length;i++){var charCode,idx=2*i;" "==upperName[i]?(nameArray[1+idx]=0,nameArray[idx]=127):(charCode=upperName.charCodeAt(i)-65,"."==upperName[i]?charCode=26:","==upperName[i]&&(charCode=27),nameArray[1+idx]=4,nameArray[idx]=charCode)}return nameArray},majorItem=(spoilerAddress,type,isProgression=!0)=>({type:type,name:ItemNames.get(type),isMajor:!0,isProgression:isProgression,spoilerAddress:spoilerAddress}),minorItem=(spoilerAddress,type,isProgression=!1)=>({type:type,name:ItemNames.get(type),isMajor:!1,isProgression:isProgression,spoilerAddress:spoilerAddress});class Loadout{hasBombs=!1;hasMorph=!1;hasGravity=!1;hasVaria=!1;hasHiJump=!1;hasSpaceJump=!1;hasScrewAttack=!1;hasSpringBall=!1;hasSpeed=!1;hasHeatShield=!1;hasPressureValve=!1;hasDoubleJump=!1;hasIce=!1;hasWave=!1;hasCharge=!1;hasSpazer=!1;hasPlasma=!1;hasGrapple=!1;missilePacks=0;superPacks=0;powerPacks=0;energyTanks=0;reserveTanks=0;totalTanks=0;canUseBombs=!1;canUsePowerBombs=!1;canPassBombPassages=!1;canDestroyBombWalls=!1;canOpenGreenDoors=!1;canOpenRedDoors=!1;canOpenYellowDoors=!1;canFly=!1;canCrystalFlash=!1;clone(){var copy=new Loadout;return copy.hasBombs=this.hasBombs,copy.hasMorph=this.hasMorph,copy.hasGravity=this.hasGravity,copy.hasVaria=this.hasVaria,copy.hasHiJump=this.hasHiJump,copy.hasSpaceJump=this.hasSpaceJump,copy.hasScrewAttack=this.hasScrewAttack,copy.hasSpringBall=this.hasSpringBall,copy.hasSpeed=this.hasSpeed,copy.hasHeatShield=copy.hasHeatShield,copy.hasPressureValve=copy.hasPressureValve,copy.hasDoubleJump=copy.hasDoubleJump,copy.hasIce=this.hasIce,copy.hasWave=this.hasWave,copy.hasCharge=this.hasCharge,copy.hasSpazer=this.hasSpazer,copy.hasPlasma=this.hasPlasma,copy.hasGrapple=this.hasGrapple,copy.missilePacks=this.missilePacks,copy.superPacks=this.superPacks,copy.powerPacks=this.powerPacks,copy.energyTanks=this.energyTanks,copy.reserveTanks=this.reserveTanks,copy.totalTanks=this.totalTanks,copy.canUseBombs=this.canUseBombs,copy.canUsePowerBombs=this.canUsePowerBombs,copy.canPassBombPassages=this.canPassBombPassages,copy.canDestroyBombWalls=this.canDestroyBombWalls,copy.canOpenGreenDoors=this.canOpenGreenDoors,copy.canOpenRedDoors=this.canOpenRedDoors,copy.canOpenYellowDoors=this.canOpenYellowDoors,copy.canFly=this.canFly,copy.canCrystalFlash=this.canCrystalFlash,copy}add(itemType){switch(itemType){case Item.Bombs:this.hasBombs=!0,this.canUseBombs=this.hasMorph,this.canPassBombPassages|=this.canUseBombs,this.canDestroyBombWalls|=this.canPassBombPassages,this.canFly|=this.canUseBombs;break;case Item.Morph:this.hasMorph=!0,this.canUseBombs=this.hasBombs,this.canUsePowerBombs=0<this.powerPacks,this.canPassBombPassages=this.canUseBombs||this.canUsePowerBombs,this.canDestroyBombWalls|=this.canPassBombPassages,this.canFly|=this.canUseBombs;break;case Item.Gravity:this.hasGravity=!0;break;case Item.PressureValve:this.hasPressureValve=!0;break;case Item.HeatShield:this.hasHeatShield=!0;break;case Item.Varia:this.hasVaria=!0;break;case Item.HJB:this.hasHiJump=!0;break;case Item.DoubleJump:this.hasDoubleJump=!0;break;case Item.SpaceJump:this.hasSpaceJump=!0,this.canFly=!0;break;case Item.ScrewAttack:this.hasScrewAttack=!0,this.canDestroyBombWalls=!0;break;case Item.SpringBall:this.hasSpringBall=!0;break;case Item.Speed:this.hasSpeed=!0;break;case Item.Ice:this.hasIce=!0;break;case Item.Wave:this.hasWave=!0;break;case Item.Charge:this.hasCharge=!0;break;case Item.Spazer:this.hasSpazer=!0;break;case Item.Plasma:this.hasPlasma=!0;break;case Item.Grapple:this.hasGrapple=!0;break;case Item.Missile:this.missilePacks+=1,this.canOpenRedDoors=!0,this.canCrystalFlash=1<this.missilePacks&&1<this.superPacks&&2<this.powerPacks;break;case Item.Super:this.superPacks+=1,this.canOpenGreenDoors=!0,this.canOpenRedDoors=!0,this.canCrystalFlash=1<this.missilePacks&&1<this.superPacks&&2<this.powerPacks;break;case Item.PowerBomb:this.powerPacks+=1,this.canUsePowerBombs=this.hasMorph,this.canPassBombPassages|=this.canUsePowerBombs,this.canDestroyBombWalls|=this.canPassBombPassages,this.canCrystalFlash=1<this.missilePacks&&1<this.superPacks&&2<this.powerPacks;break;case Item.EnergyTank:this.energyTanks+=1,this.totalTanks+=1;break;case Item.Reserve:this.reserveTanks+=1,this.totalTanks+=1;break;case Item.BeamUpgrade:case Item.Xray:break;default:console.error("[Loadout] Unknown item type:",ItemNames.get(itemType))}}}class Node{constructor(name,location,isMajor,available){this.name=name,this.location=location,this.isMajor=isMajor,this.sortWeight=0,this.available=available,this.item=void 0}GetWeight(){return this.location.area==Area.LowerNorfair?11:this.location.area==Area.WreckedShip?12:0}SetItem(item){this.item=item}}class MajorMinorLogic{nodes=[];constructor(seed,nodes){this.seed=seed,this.nodes=nodes}canPlaceAtLocation(item,node){var notFirstThree,area;return null==node.item&&item.isMajor==node.isMajor&&(notFirstThree=node=>{node=node.location.name;return"Morphing Ball"!=node&&"Beta Missiles"!=node&&"Energy Tank, Brinstar Ceiling"!=node},area=node.location.area,item.type==Item.Gravity?area!=Area.Crateria&&notFirstThree(node):item.type!=Item.Varia||area!=Area.LowerNorfair&&area!=Area.Crateria&&notFirstThree(node))}placeItems(itemPool){const rnd=new DotNetRandom(this.seed);rnd.Next(7),rnd.Next(7);let prefillLoadout=new Loadout;prefillLoadout.hasCharge=!0;var prefill=itemType=>{var itemIndex=itemPool.findIndex(i=>i.type==itemType);const item=itemPool.splice(itemIndex,1)[0];itemIndex=this.nodes.filter(n=>n.available(prefillLoadout)&&this.canPlaceAtLocation(item,n));itemIndex[rnd.Next(itemIndex.length)].SetItem(item),prefillLoadout.add(itemType)};switch(prefill(Item.Morph),rnd.Next(100)<65?prefill(Item.Missile):prefill(Item.Super),rnd.Next(13)){case 0:prefill(Item.Speed);break;case 1:case 2:prefill(Item.ScrewAttack);break;case 3:case 4:case 5:case 6:prefill(Item.Bombs);break;default:prefill(Item.PowerBomb)}prefillLoadout.superPacks<1&&prefill(Item.Super),prefillLoadout.powerPacks<1&&prefill(Item.PowerBomb);const swap=(arr,x,y)=>{var tmp=arr[x];arr[x]=arr[y],arr[y]=tmp};var shuffle=arr=>{for(let i=0;i<arr.length;i++)swap(arr,i,rnd.NextInRange(i,arr.length))},shuffledLocations=this.nodes.filter(n=>n.isMajor);shuffle(shuffledLocations);let num=100,shuffledItems=(shuffledLocations.forEach(n=>{n.sortWeight=num-n.GetWeight(),num+=10}),shuffledLocations.sort((a,b)=>a.sortWeight-b.sortWeight),itemPool);shuffle(shuffledItems);const firstSuit=0==rnd.Next(2)?Item.Varia:Item.Gravity;for(var firstProgression,shuffle=shuffledItems.findIndex(i=>i.type==firstSuit),getAssumedLoadout=(shuffledItems.unshift(shuffledItems.splice(shuffle,1)[0]),()=>{var itemLocations=this.nodes.filter(n=>null!=n.item);let assumedLoadout=prefillLoadout.clone();return shuffledItems.forEach(i=>assumedLoadout.add(i.type)),itemLocations.filter(n=>n.available(assumedLoadout)).forEach(n=>assumedLoadout.add(n.item.type)),assumedLoadout});0<=(firstProgression=shuffledItems.findIndex(p=>p.isProgression));){let item=shuffledItems.splice(firstProgression,1)[0];const assumedLoadout=getAssumedLoadout();shuffledLocations.find(n=>n.available(assumedLoadout)&&this.canPlaceAtLocation(item,n)).SetItem(item)}const getCurrentLoadout=()=>{let current=new Loadout;return this.nodes.forEach(n=>{null!=n.item&&current.add(n.item.type)}),current},getAvailableLocations=load=>this.nodes.filter(n=>null==n.item&&n.available(load)),checkItem=item=>{var current=getCurrentLoadout(),oldLocations=getAvailableLocations(current);if(!oldLocations.some(n=>this.canPlaceAtLocation(item,n)))return!1;current.add(item.type);current=getAvailableLocations(current);return!(current.length<=oldLocations.length)&&current.some(n=>n.isMajor)},getPossibleItems=()=>itemPool.filter(i=>checkItem(i));for(var placeItem=()=>{let possibleItems=getPossibleItems();let item=0==possibleItems.length?itemPool[rnd.Next(itemPool.length)]:possibleItems[rnd.Next(possibleItems.length)];var availableLocations=getAvailableLocations(getCurrentLoadout()).filter(n=>this.canPlaceAtLocation(item,n));return availableLocations[rnd.Next(availableLocations.length)].SetItem(item),item};0<itemPool.length;){const item=placeItem();var itemIndex=itemPool.findIndex(i=>i==item);itemPool.splice(itemIndex,1)}}}class FullLogic{nodes=[];constructor(seed,nodes){this.seed=seed,this.nodes=nodes}canPlaceAtLocation(item,node){return null==node.item}placeItems(itemPool){const rnd=new DotNetRandom(this.seed);rnd.Next(7),rnd.Next(7);let prefillLoadout=new Loadout;prefillLoadout.hasCharge=!0;var prefill=itemType=>{var itemIndex=itemPool.findIndex(i=>i.type==itemType);const item=itemPool.splice(itemIndex,1)[0];itemIndex=this.nodes.filter(n=>n.available(prefillLoadout)&&this.canPlaceAtLocation(item,n));itemIndex[rnd.Next(itemIndex.length)].SetItem(item),prefillLoadout.add(itemType)};switch(prefill(Item.Morph),rnd.Next(100)<65?prefill(Item.Missile):prefill(Item.Super),rnd.Next(13)){case 0:prefill(Item.Missile),prefill(Item.ScrewAttack);break;case 1:prefill(Item.Missile),prefill(Item.Speed);break;case 2:prefill(Item.Missile),prefill(Item.Bombs)}prefill(Item.PowerBomb),prefillLoadout.superPacks<1&&prefill(Item.Super);const swap=(arr,x,y)=>{var tmp=arr[x];arr[x]=arr[y],arr[y]=tmp};var shuffle=arr=>{for(let i=0;i<arr.length;i++)swap(arr,i,rnd.NextInRange(i,arr.length))},shuffledLocations=this.nodes.filter(()=>!0);shuffle(shuffledLocations);let num=100,shuffledItems=(shuffledLocations.forEach(n=>{n.sortWeight=num-n.GetWeight(),num+=10}),shuffledLocations.sort((a,b)=>a.sortWeight-b.sortWeight),itemPool);shuffle(shuffledItems);const firstSuit=0==rnd.Next(2)?Item.Varia:Item.Gravity;for(var firstProgression,shuffle=shuffledItems.findIndex(i=>i.type==firstSuit),getAssumedLoadout=(shuffledItems.unshift(shuffledItems.splice(shuffle,1)[0]),()=>{var itemLocations=this.nodes.filter(n=>null!=n.item);let assumedLoadout=prefillLoadout.clone();return shuffledItems.forEach(i=>assumedLoadout.add(i.type)),itemLocations.filter(n=>n.available(assumedLoadout)).forEach(n=>assumedLoadout.add(n.item.type)),assumedLoadout});0<=(firstProgression=shuffledItems.findIndex(p=>p.isProgression));){let item=shuffledItems.splice(firstProgression,1)[0];const assumedLoadout=getAssumedLoadout();shuffledLocations.find(n=>n.available(assumedLoadout)&&this.canPlaceAtLocation(item,n)).SetItem(item)}const getCurrentLoadout=()=>{let current=new Loadout;return this.nodes.forEach(n=>{null!=n.item&&current.add(n.item.type)}),current},getAvailableLocations=load=>this.nodes.filter(n=>null==n.item&&n.available(load)),checkItem=item=>{var current=getCurrentLoadout(),oldLocations=getAvailableLocations(current);return!(!oldLocations.some(n=>this.canPlaceAtLocation(item,n))||(current.add(item.type),getAvailableLocations(current).length<=oldLocations.length))},getPossibleItems=()=>itemPool.filter(i=>checkItem(i));for(var placeItem=()=>{let possibleItems=getPossibleItems();let item=0==possibleItems.length?itemPool[rnd.Next(itemPool.length)]:possibleItems[rnd.Next(possibleItems.length)];var availableLocations=getAvailableLocations(getCurrentLoadout()).filter(n=>this.canPlaceAtLocation(item,n));return availableLocations[rnd.Next(availableLocations.length)].SetItem(item),item};0<itemPool.length;){const item=placeItem();var itemIndex=itemPool.findIndex(i=>i==item);itemPool.splice(itemIndex,1)}}}class ModeStandard{nodes=[];constructor(seed,locations){this.itemPool=this.setupItemPool(seed),this.setupNodes(locations)}setupItemPool(seed){seed=new DotNetRandom(seed);let itemPool=[majorItem(0,Item.EnergyTank,!1),minorItem(0,Item.Missile),minorItem(0,Item.Super),minorItem(0,Item.PowerBomb),majorItem(3113223,Item.Bombs),majorItem(3115399,Item.Charge,!1),majorItem(3113351,Item.Ice),majorItem(3114119,Item.HJB),majorItem(3114375,Item.Speed),majorItem(3113479,Item.Wave),majorItem(3113607,Item.Spazer,!1),majorItem(3114631,Item.SpringBall),majorItem(3113863,Item.Varia),majorItem(3113735,Item.Plasma),majorItem(3114887,Item.Grapple),majorItem(3113095,Item.Morph),majorItem(0,Item.Reserve),majorItem(3113991,Item.Gravity),majorItem(3114759,Item.Xray,!1),majorItem(3114247,Item.SpaceJump),majorItem(3114503,Item.ScrewAttack)];var setAmountInPool=(type,count)=>{const item=itemPool.find(i=>i.type==type);for(;itemPool.filter(i=>i==item).length<count;)itemPool.unshift(item)},numSupers=12+seed.Next(7),seed=14+seed.Next(7),numMissiles=66-numSupers-seed;return setAmountInPool(Item.Reserve,4),setAmountInPool(Item.EnergyTank,14),setAmountInPool(Item.Missile,numMissiles),setAmountInPool(Item.Super,numSupers),setAmountInPool(Item.PowerBomb,seed),itemPool}setupNodes(locations){let add=(name,isMajor,available)=>{var loc=locations.find(p=>p.name==name);this.nodes.push(new Node(name,loc,isMajor,available))};var major=(n,a)=>add(n,!0,a),minor=(n,a)=>add(n,!1,a);const canHellRun=load=>2<load.totalTanks||load.hasVaria,canAccessRedBrinstar=load=>0<load.superPacks&&(load.canUsePowerBombs||load.canDestroyBombWalls&&load.hasMorph),canAccessHeatedNorfair=load=>canAccessRedBrinstar(load)&&canHellRun(load),canAccessLowerNorfair=load=>canAccessHeatedNorfair(load)&&load.canUsePowerBombs&&load.hasVaria&&(load.hasHiJump||load.hasGravity),canPassWorstRoom=load=>canAccessLowerNorfair(load)&&(load.canFly||load.hasHiJump||load.hasSpringBall||load.hasIce&&load.hasCharge),canAccessKraid=load=>canAccessRedBrinstar(load)&&load.canPassBombPassages,canAccessCrocomire=load=>canAccessHeatedNorfair(load)||canAccessKraid(load)&&load.canUsePowerBombs&&load.hasSpeed&&1<load.totalTanks,canDoSuitlessMaridia=load=>load.hasHiJump&&load.hasGrapple&&(load.hasIce||load.hasSpringBall),canDefeatBotwoon=load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&(load.hasIce||load.hasSpeed)&&(load.hasGravity||canDoSuitlessMaridia(load)&&load.hasIce),canDefeatDraygon=load=>canDefeatBotwoon(load)&&load.hasGravity,canAccessWreckedShip=load=>load.canUsePowerBombs&&0<load.superPacks,canAccessOuterMaridia=load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&(load.hasGravity||load.hasHiJump&&(load.hasIce||load.hasSpringBall)),canAccessInnerMaridia=load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&load.hasGravity,canEnterAndLeaveGauntlet=load=>load.canUseBombs||load.hasScrewAttack||load.canUsePowerBombs&&1<load.powerPacks||load.hasSpeed&&load.canUsePowerBombs&&1<load.totalTanks;minor("Landing Site (PBs)",load=>load.canUsePowerBombs&&(load.hasSpeed||load.canFly)),minor("Ocean (Missiles)",load=>canAccessWreckedShip(load)),minor("Sky (Missiles)",load=>canAccessWreckedShip(load)),minor("Outside WS Middle (Missiles)",load=>canAccessWreckedShip(load)),minor("Moat (Missiles)",load=>canAccessWreckedShip(load)),major("Energy Tank, Gauntlet",load=>canEnterAndLeaveGauntlet(load)),minor("Missile (Crateria Bottom)",load=>load.canDestroyBombWalls),major("Bomb",load=>load.hasMorph&&load.canOpenRedDoors),major("Energy Tank, Terminator",load=>load.canDestroyBombWalls||load.hasSpeed),minor("Gauntlet Right (Missiles)",load=>canEnterAndLeaveGauntlet(load)&&load.canPassBombPassages),minor("Gauntlet Left (Missiles)",load=>canEnterAndLeaveGauntlet(load)&&load.canPassBombPassages),minor("Climb (Supers)",load=>load.canUsePowerBombs&&load.hasSpeed&&1<load.energyTanks&&2<load.totalTanks),minor("Missile (Crateria Middle)",load=>load.canPassBombPassages),minor("Etecoons (PBs)",load=>load.canUsePowerBombs),minor("Spo Spo (Supers)",load=>load.canPassBombPassages&&0<load.superPacks),minor("Early Supers Bridge",load=>load.canOpenRedDoors&&(load.hasSpeed||load.canDestroyBombWalls)),minor("Early Supers",load=>load.canOpenRedDoors&&(load.hasSpeed||load.canDestroyBombWalls)&&(load.hasMorph||load.hasSpeed)),major("Reserve Tank, Brinstar",load=>load.canOpenRedDoors&&(load.hasSpeed||load.canDestroyBombWalls)&&(load.hasMorph||load.hasSpeed)),minor("Brinstar Reserve 2 (Missiles)",load=>load.canOpenRedDoors&&load.canPassBombPassages),minor("Brinstar Reserve 1 (Missiles)",load=>load.canOpenRedDoors&&load.canDestroyBombWalls&&load.hasMorph),minor("Big Pink (Missiles)",load=>load.canUsePowerBombs||load.canOpenRedDoors&&(load.hasSpeed||load.canDestroyBombWalls)),minor("Charge (Missiles)",load=>load.canUsePowerBombs||load.canOpenRedDoors&&(load.hasSpeed||load.canDestroyBombWalls)),major("Charge Beam",load=>load.canUsePowerBombs||load.canOpenRedDoors&&load.canPassBombPassages),minor("Mission Impossible (PBs)",load=>load.canUsePowerBombs&&0<load.superPacks),minor("Tube (Missiles)",load=>load.canUsePowerBombs||load.canPassBombPassages&&load.canOpenGreenDoors),major("Morphing Ball",load=>!0),minor("Blue PBs",load=>load.canUsePowerBombs),minor("Beta Missiles",load=>load.hasMorph),major("Energy Tank, Brinstar Ceiling",load=>!0),major("Energy Tank, Etecoons",load=>load.canUsePowerBombs),minor("Etecoons (Supers)",load=>load.canUsePowerBombs&&load.canOpenGreenDoors),major("Energy Tank, Waterway",load=>load.canUsePowerBombs&&load.canOpenRedDoors&&load.hasSpeed),minor("Alpha Missiles",load=>load.hasMorph),major("Energy Tank, Brinstar Gate",load=>load.canUsePowerBombs&&(load.hasWave||0<load.superPacks)),minor("Billy Mays 1",load=>load.canUsePowerBombs),minor("Billy Mays 2",load=>load.canUsePowerBombs),major("Xray Scope",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&(load.hasGrapple||load.hasSpaceJump||5<load.totalTanks||load.hasVaria&&3<load.totalTanks)),minor("Beta PBs",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs),minor("Alpha PBs",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs),minor("Alpha PBs (Missiles)",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs),major("Spazer",load=>canAccessRedBrinstar(load)),major("Energy Tank, Kraid",load=>canAccessKraid(load)),minor("Kraid Missiles",load=>canAccessKraid(load)&&load.canUsePowerBombs),major("Varia Suit",load=>canAccessKraid(load)),minor("Cathedral Missiles",load=>canAccessHeatedNorfair(load)),major("Ice Beam",load=>canAccessKraid(load)&&(load.hasVaria||1<load.totalTanks)),minor("Southern Missiles",load=>canAccessKraid(load)&&load.canUsePowerBombs&&canHellRun(load)),major("Energy Tank, Crocomire",load=>canAccessCrocomire(load)),major("HiJump Boots",load=>canAccessRedBrinstar(load)),minor("Croc Escape",load=>canAccessCrocomire(load)&&(load.canFly||load.hasGrapple||load.hasIce||load.hasHiJump&&load.hasSpeed)),minor("HJB (Missiles)",load=>canAccessRedBrinstar(load)),minor("Energy Tank, Hi-Jump Boots",load=>canAccessRedBrinstar(load)),minor("Croc PBs",load=>canAccessCrocomire(load)),minor("Cosine Missiles",load=>canAccessCrocomire(load)),minor("Indiana Jones",load=>canAccessCrocomire(load)&&(load.canFly||load.hasGrapple||load.hasSpeed)),major("Grapple Beam",load=>canAccessCrocomire(load)),major("Reserve Tank, Norfair",load=>canAccessHeatedNorfair(load)&&(load.canFly||load.hasGrapple||load.hasIce||load.hasSpringBall||load.hasHiJump)),minor("Norfair Reserve 2 (Missiles)",load=>canAccessHeatedNorfair(load)&&(load.canFly||load.hasGrapple||load.hasIce||load.hasSpringBall||load.hasHiJump)),minor("Norfair Reserve 1 (Missiles)",load=>canAccessHeatedNorfair(load)&&(load.canFly||load.hasGrapple||load.hasIce||load.hasSpringBall||load.hasHiJump)),minor("Bubble Mountain Missiles",load=>canAccessHeatedNorfair(load)),minor("Speed Missiles",load=>canAccessHeatedNorfair(load)),major("Speed Booster",load=>canAccessHeatedNorfair(load)),minor("Wave Missiles",load=>canAccessHeatedNorfair(load)),major("Wave Beam",load=>canAccessHeatedNorfair(load)),minor("GT Missiles",load=>canAccessLowerNorfair(load)&&load.hasSpaceJump),minor("GT Supers",load=>canAccessLowerNorfair(load)),minor("Mickey Mouse Missiles",load=>canPassWorstRoom(load)),minor("Maze Missiles",load=>canPassWorstRoom(load)),minor("Maze PBs",load=>canPassWorstRoom(load)),minor("PBs of Shame",load=>canPassWorstRoom(load)),minor("3 Muskateers",load=>canPassWorstRoom(load)),major("Energy Tank, Ridley",load=>canPassWorstRoom(load)),major("Screw Attack",load=>canAccessLowerNorfair(load)&&(load.canFly||load.hasSpringBall||load.hasSpeed)),major("Energy Tank, Firefleas",load=>canPassWorstRoom(load)),minor("Spooky Missiles",load=>canAccessWreckedShip(load)),major("Reserve Tank, Wrecked Ship",load=>canAccessWreckedShip(load)&&load.hasSpeed&&(load.hasVaria&&0<load.totalTanks||1<load.totalTanks)),minor("WS Reserve Missiles",load=>canAccessWreckedShip(load)&&(load.hasVaria||0<load.totalTanks)),minor("WS Attic Missiles",load=>canAccessWreckedShip(load)),major("Energy Tank, Wrecked Ship",load=>canAccessWreckedShip(load)&&(load.canUseBombs||load.canUsePowerBombs||load.hasHiJump||load.hasSpaceJump||load.hasSpeed||load.hasSpringBall)),minor("WS Supers Left",load=>canAccessWreckedShip(load)),major("Right Super, Wrecked Ship",load=>canAccessWreckedShip(load)),major("Gravity Suit",load=>canAccessWreckedShip(load)&&(load.hasVaria||0<load.totalTanks)),minor("Mainstreet Missiles",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&load.hasGravity&&load.hasSpeed),minor("Crab Supers",load=>canAccessOuterMaridia(load)),major("Energy Tank, Mama Turtle",load=>canAccessOuterMaridia(load)&&(load.canFly||load.hasSpeed||load.hasGrapple)),minor("Mama Turtle Missiles",load=>canAccessOuterMaridia(load)),minor("Watering Hole Supers",load=>canAccessInnerMaridia(load)),minor("Watering Hole Missiles",load=>canAccessInnerMaridia(load)),minor("Beach Missiles",load=>canAccessInnerMaridia(load)),major("Plasma Beam",load=>canDefeatDraygon(load)&&(load.hasCharge&&3<=load.totalTanks||load.hasScrewAttack||load.hasPlasma)&&(load.hasHiJump||load.hasSpringBall||load.canFly||load.hasSpeed)),minor("Left Sand Pit (Missiles)",load=>canAccessOuterMaridia(load)&&(canDoSuitlessMaridia(load)||load.hasGravity)),major("Reserve Tank, Maridia",load=>canAccessOuterMaridia(load)&&load.hasGravity),minor("Right Sand Pit (Missiles)",load=>canAccessInnerMaridia(load)),minor("Right Sand Pit (PBs)",load=>canAccessOuterMaridia(load)&&load.hasGravity),minor("Aquaduct Missiles",load=>canAccessOuterMaridia(load)&&load.hasGravity),minor("Aquaduct Supers",load=>canAccessOuterMaridia(load)&&load.hasGravity),major("Spring Ball",load=>canAccessInnerMaridia(load)&&(load.hasIce||load.hasGrapple&&(load.canFly||load.hasHiJump))),minor("Precious Missiles",load=>canDefeatDraygon(load)),major("Energy Tank, Botwoon",load=>canDefeatBotwoon(load)),major("Space Jump",load=>canDefeatDraygon(load))}}class ModeRecall{nodes=[];constructor(seed,locations){this.itemPool=this.setupItemPool(seed),this.setupNodes(locations)}setupItemPool(seed){seed=new DotNetRandom(seed);let itemPool=[majorItem(0,Item.EnergyTank,!1),minorItem(0,Item.Missile),minorItem(0,Item.Super),minorItem(0,Item.PowerBomb),majorItem(3113223,Item.Bombs),majorItem(3115399,Item.BeamUpgrade,!1),majorItem(3113351,Item.Ice),majorItem(3114119,Item.HJB),majorItem(3114375,Item.Speed),majorItem(3113479,Item.Wave),majorItem(3113607,Item.Spazer),majorItem(3114631,Item.SpringBall),majorItem(3113863,Item.Varia),majorItem(3113735,Item.Plasma),majorItem(3114887,Item.Grapple),majorItem(3113095,Item.Morph),majorItem(0,Item.Reserve),majorItem(3113991,Item.Gravity),majorItem(3114759,Item.Xray,!1),majorItem(3114247,Item.SpaceJump),majorItem(3114503,Item.ScrewAttack),majorItem(3115271,Item.DoubleJump),majorItem(3115143,Item.PressureValve),majorItem(3115015,Item.HeatShield),majorItem(3115463,Item.BeamUpgrade,!1),majorItem(3115527,Item.BeamUpgrade,!1),majorItem(3115591,Item.BeamUpgrade,!1)];var setAmountInPool=(type,count)=>{const item=itemPool.find(i=>i.type==type);for(;itemPool.filter(i=>i==item).length<count;)itemPool.unshift(item)},numSupers=15+seed.Next(4),seed=15+seed.Next(4),numMissiles=64-numSupers-seed;return setAmountInPool(Item.Reserve,2),setAmountInPool(Item.EnergyTank,12),setAmountInPool(Item.Missile,numMissiles),setAmountInPool(Item.Super,numSupers),setAmountInPool(Item.PowerBomb,seed),itemPool}getRecallLocation(recallName,locations){const locationName=[["Bombs","Bomb"],["Energy Tank (Brinstar Ceiling)","Energy Tank, Brinstar Ceiling"],["Energy Tank (Gauntlet)","Energy Tank, Gauntlet"],["Energy Tank (Terminator)","Energy Tank, Terminator"],["Missiles (230)","Missile (Crateria Middle)"],["Missiles (Alpha)","Alpha Missiles"],["Missiles (Beta)","Beta Missiles"],["Missiles (Billy Mays 1)","Billy Mays 1"],["Missiles (Billy Mays 2)","Billy Mays 2"],["Missiles (Gauntlet Left)","Gauntlet Left (Missiles)"],["Missiles (Gauntlet Right)","Gauntlet Right (Missiles)"],["Missiles (Moat)","Moat (Missiles)"],["Missiles (Mother Brain)","Missile (Crateria Bottom)"],["Morphing Ball","Morphing Ball"],["Power Bombs (Landing Site)","Landing Site (PBs)"],["Power Bombs (Morph)","Blue PBs"],["Supers (Climb)","Climb (Supers)"],["Energy Tank (Crocomire)","Energy Tank, Crocomire"],["Grapple Beam","Grapple Beam"],["Missiles (Cosine)","Cosine Missiles"],["Missiles (Indiana Jones)","Indiana Jones"],["Power Bombs (Crocomire)","Croc PBs"],["Energy Tank (Botwoon)","Energy Tank, Botwoon"],["Missiles (Aqueduct)","Aquaduct Missiles"],["Missiles (Precious)","Precious Missiles"],["Missiles (Sand Pit Left)","Left Sand Pit (Missiles)"],["Missiles (Sand Pit Right)","Right Sand Pit (Missiles)"],["Plasma Beam","Plasma Beam"],["Power Bombs (Sand Pit Right)","Right Sand Pit (PBs)"],["Reserve Tank (Maridia)","Reserve Tank, Maridia"],["Space Jump","Space Jump"],["Spring Ball","Spring Ball"],["Supers (Aqueduct)","Aquaduct Supers"],["Charge Beam","Charge Beam"],["Energy Tank (Etecoons)","Energy Tank, Etecoons"],["Energy Tank (Waterway)","Energy Tank, Waterway"],["Energy Tank (Wave Gate)","Energy Tank, Brinstar Gate"],["Missiles (Big Pink)","Big Pink (Missiles)"],["Missiles (Brin Reserve 1)","Brinstar Reserve 1 (Missiles)"],["Missiles (Brin Reserve 2)","Brinstar Reserve 2 (Missiles)"],["Missiles (Brin Tube)","Tube (Missiles)"],["Missiles (Charge))","Charge (Missiles)"],["Missiles (Early Bridge)","Early Supers Bridge"],["Power Bombs (Etecoons)","Etecoons (PBs)"],["Power Bombs (Mission Impossible)","Mission Impossible (PBs)"],["Reserve Tank (Brinstar)","Reserve Tank, Brinstar"],["Supers (Early Bridge)","Early Supers"],["Supers (Etecoons)","Etecoons (Supers)"],["Supers (Spore Spawn)","Spo Spo (Supers)"],["Energy Tank (Kraid)","Energy Tank, Kraid"],["Missiles (Kraid)","Kraid Missiles"],["Varia Suit","Varia Suit"],["Energy Tank (Firefleas)","Energy Tank, Firefleas"],["Energy Tank (Ridley)","Energy Tank, Ridley"],["Missiles (GT)","GT Missiles"],["Missiles (Maze)","Maze Missiles"],["Missiles (Mickey Mouse)","Mickey Mouse Missiles"],["Missiles (Three Muskateers)","3 Muskateers"],["Power Bombs (Maze)","Maze PBs"],["Power Bombs (Shame)","PBs of Shame"],["Screw Attack","Screw Attack"],["Supers (GT)","GT Supers"],["Missiles (Alpha PBs)","Alpha PBs (Missiles)"],["Power Bombs (Alpha)","Alpha PBs"],["Power Bombs (Beta)","Beta PBs"],["Spazer","Spazer"],["Xray Scope","Xray Scope"],["Energy Tank (HJB)","Energy Tank, Hi-Jump Boots"],["HiJump Boots","HiJump Boots"],["Ice Beam","Ice Beam"],["Missiles (Bubble Mountain)","Bubble Mountain Missiles"],["Missiles (Cathedral)","Cathedral Missiles"],["Missiles (Croc Escape)","Croc Escape"],["Missiles (Crumble Shaft)","Southern Missiles"],["Missiles (HJB)","HJB (Missiles)"],["Missiles (Norfair Reserve 1)","Norfair Reserve 1 (Missiles)"],["Missiles (Norfair Reserve 2)","Norfair Reserve 2 (Missiles)"],["Missiles (Speed)","Speed Missiles"],["Missiles (Wave)","Wave Missiles"],["Reserve Tank (Norfair)","Reserve Tank, Norfair"],["Speed Booster","Speed Booster"],["Wave Beam","Wave Beam"],["Energy Tank, Mama Turtle","Energy Tank, Mama Turtle"],["Missiles (Beach)","Beach Missiles"],["Missiles (Mainstreet)","Mainstreet Missiles"],["Missiles (Mama Turtle)","Mama Turtle Missiles"],["Missiles (Watering Hole)","Watering Hole Missiles"],["Supers (Crab)","Crab Supers"],["Supers (Watering Hole)","Watering Hole Supers"],["Energy Tank, Wrecked Ship","Energy Tank, Wrecked Ship"],["Gravity Suit","Gravity Suit"],["Missiles (Attic)","WS Attic Missiles"],["Missiles (Bowling)","WS Reserve Missiles"],["Missiles (Ocean Bottom)","Ocean (Missiles)"],["Missiles (Ocean Middle)","Outside WS Middle (Missiles)"],["Missiles (Sky)","Sky (Missiles)"],["Missiles (Spooky)","Spooky Missiles"],["Reserve Tank (Wrecked Ship)","Reserve Tank, Wrecked Ship"],["Supers (WS Left)","WS Supers Left"],["Supers (WS Right)","Right Super, Wrecked Ship"]].find(m=>m[0]==recallName)[1];return locations.find(l=>l.name==locationName)}setupNodes(locations){let add=(name,isMajor,available)=>{var loc=this.getRecallLocation(name,locations);this.nodes.push(new Node(name,loc,isMajor,available))};var major=(n,a)=>add(n,!0,a),minor=(n,a)=>add(n,!1,a);this.getRecallLocation("Reserve Tank (Wrecked Ship)",locations).modifier=0;const canHellRun=load=>4<=load.totalTanks||3<=load.totalTanks&&load.hasGravity||load.hasVaria||load.hasHeatShield,canAccessRedBrinstar=load=>1<=load.superPacks&&(load.canUsePowerBombs||load.canDestroyBombWalls&&load.hasMorph),canAccessHeatedNorfair=load=>canAccessRedBrinstar(load)&&canHellRun(load),canAccessLowerNorfair=load=>canAccessHeatedNorfair(load)&&load.canUsePowerBombs&&load.hasVaria&&(load.hasHiJump||load.hasGravity),canPassWorstRoom=load=>canAccessLowerNorfair(load)&&(load.canFly||load.hasHiJump||load.hasSpringBall||load.hasDoubleJump||load.hasIce&&load.hasCharge),canAccessKraid=load=>canAccessRedBrinstar(load)&&load.canPassBombPassages,canAccessCrocomire=load=>canAccessHeatedNorfair(load)||canAccessKraid(load)&&load.canUsePowerBombs&&load.hasSpeed&&2<=load.totalTanks,canDoSuitlessMaridia=load=>load.hasHiJump&&load.hasGrapple&&(load.hasIce||load.hasSpringBall),canDefeatBotwoon=load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&(load.hasIce||load.hasSpeed||load.hasSpazer)&&(load.hasGravity||canDoSuitlessMaridia(load)&&load.hasIce),canDefeatDraygon=load=>canDefeatBotwoon(load)&&load.hasGravity,canAccessWreckedShip=load=>load.canUsePowerBombs&&1<=load.superPacks,canAccessWestMaridia=load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&(load.hasGravity||load.hasPressureValve||load.hasHiJump&&(load.hasIce||load.hasSpringBall));const canEnterAndLeaveGauntlet=load=>load.canUseBombs&&2<=load.totalTanks||load.hasScrewAttack||load.canUsePowerBombs&&2<=load.powerPacks&&1<=load.totalTanks;major("Bombs",load=>load.hasMorph&&load.canOpenRedDoors),major("Energy Tank (Brinstar Ceiling)",load=>!0),major("Energy Tank (Gauntlet)",load=>canEnterAndLeaveGauntlet(load)),major("Energy Tank (Terminator)",load=>load.canDestroyBombWalls||load.hasSpeed),minor("Missiles (230)",load=>load.canPassBombPassages),minor("Missiles (Alpha)",load=>load.hasMorph),minor("Missiles (Beta)",load=>load.hasMorph),minor("Missiles (Billy Mays 1)",load=>load.canUsePowerBombs),minor("Missiles (Billy Mays 2)",load=>load.canUsePowerBombs),minor("Missiles (Gauntlet Left)",load=>canEnterAndLeaveGauntlet(load)&&load.canPassBombPassages),minor("Missiles (Gauntlet Right)",load=>canEnterAndLeaveGauntlet(load)&&load.canPassBombPassages),minor("Missiles (Moat)",load=>canAccessWreckedShip(load)),minor("Missiles (Mother Brain)",load=>load.canDestroyBombWalls),major("Morphing Ball",load=>!0),minor("Power Bombs (Landing Site)",load=>load.canUsePowerBombs&&(load.hasSpeed&&1<=load.totalTanks||load.canFly)),minor("Power Bombs (Morph)",load=>load.canUsePowerBombs),minor("Supers (Climb)",load=>load.canUsePowerBombs&&load.hasSpeed&&2<=load.energyTanks&&3<=load.totalTanks),major("Energy Tank (Crocomire)",load=>canAccessCrocomire(load)),major("Grapple Beam",load=>canAccessCrocomire(load)),minor("Missiles (Cosine)",load=>canAccessCrocomire(load)),minor("Missiles (Indiana Jones)",load=>canAccessCrocomire(load)&&(load.canFly||load.hasSpeed)),minor("Power Bombs (Crocomire)",load=>canAccessCrocomire(load)),major("Energy Tank (Botwoon)",load=>canDefeatBotwoon(load)),minor("Missiles (Aqueduct)",load=>canAccessWestMaridia(load)&&load.hasGravity),minor("Missiles (Precious)",load=>canDefeatDraygon(load)),minor("Missiles (Sand Pit Left)",load=>canAccessWestMaridia(load)&&load.hasGravity),minor("Missiles (Sand Pit Right)",load=>canAccessWestMaridia(load)&&load.hasGravity),major("Plasma Beam",load=>canAccessWreckedShip(load)&&(load.hasGravity||load.hasPressureValve)),minor("Power Bombs (Sand Pit Right)",load=>canAccessWestMaridia(load)&&load.hasGravity),major("Reserve Tank (Maridia)",load=>canAccessWestMaridia(load)&&load.hasGravity),major("Space Jump",load=>canDefeatDraygon(load)),major("Spring Ball",load=>canAccessWreckedShip(load)&&(load.hasGravity||load.hasPressureValve)),minor("Supers (Aqueduct)",load=>canAccessWestMaridia(load)&&load.hasGravity),major("Charge Beam",load=>load.canUsePowerBombs||load.canOpenRedDoors&&load.canPassBombPassages),major("Energy Tank (Etecoons)",load=>load.canUsePowerBombs),major("Energy Tank (Waterway)",load=>load.canUsePowerBombs&&load.canOpenRedDoors&&(load.hasSpeed||load.hasSpazer)),major("Energy Tank (Wave Gate)",load=>load.canUsePowerBombs&&(load.hasWave||0<load.superPacks)),minor("Missiles (Big Pink)",load=>load.canUsePowerBombs||load.canOpenRedDoors&&(load.hasSpeed||load.canDestroyBombWalls)),minor("Missiles (Brin Reserve 1)",load=>load.canOpenRedDoors&&load.canPassBombPassages),minor("Missiles (Brin Reserve 2)",load=>load.canOpenRedDoors&&load.canDestroyBombWalls&&load.hasMorph),minor("Missiles (Brin Tube)",load=>load.canUsePowerBombs||load.canPassBombPassages&&load.canOpenGreenDoors),minor("Missiles (Charge))",load=>load.canUsePowerBombs||load.canOpenRedDoors&&(load.hasSpeed||load.canDestroyBombWalls)),minor("Missiles (Early Bridge)",load=>load.canOpenRedDoors&&load.canDestroyBombWalls),minor("Power Bombs (Etecoons)",load=>load.canUsePowerBombs),minor("Power Bombs (Mission Impossible)",load=>load.canUsePowerBombs&&0<load.superPacks),major("Reserve Tank (Brinstar)",load=>load.canOpenRedDoors&&load.canDestroyBombWalls&&load.hasMorph),minor("Supers (Early Bridge)",load=>load.canOpenRedDoors&&load.canDestroyBombWalls&&load.hasMorph),minor("Supers (Etecoons)",load=>load.canUsePowerBombs&&load.canOpenGreenDoors),minor("Supers (Spore Spawn)",load=>load.canPassBombPassages&&0<load.superPacks),minor("Energy Tank (Kraid)",load=>canAccessKraid(load)),minor("Missiles (Kraid)",load=>canAccessKraid(load)&&load.canUsePowerBombs),major("Varia Suit",load=>canAccessKraid(load)),major("Energy Tank (Firefleas)",load=>canPassWorstRoom(load)),major("Energy Tank (Ridley)",load=>canPassWorstRoom(load)),minor("Missiles (GT)",load=>canAccessLowerNorfair(load)&&load.hasSpaceJump),minor("Missiles (Maze)",load=>canPassWorstRoom(load)),major("Missiles (Mickey Mouse)",load=>canPassWorstRoom(load)),minor("Missiles (Three Muskateers)",load=>canPassWorstRoom(load)),minor("Power Bombs (Maze)",load=>canPassWorstRoom(load)),minor("Power Bombs (Shame)",load=>canPassWorstRoom(load)),major("Screw Attack",load=>canAccessLowerNorfair(load)&&(load.canFly||load.hasDoubleJump||load.hasSpringBall||load.hasSpeed)),minor("Supers (GT)",load=>canAccessLowerNorfair(load)),minor("Missiles (Alpha PBs)",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs),minor("Power Bombs (Alpha)",load=>canAccessRedBrinstar(load)),minor("Power Bombs (Beta)",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs),major("Spazer",load=>canAccessRedBrinstar(load)),major("Xray Scope",load=>canAccessRedBrinstar(load)&&load.canUsePowerBombs&&(load.hasGrapple||load.hasSpaceJump||6<=load.totalTanks||load.hasVaria&&3<=load.totalTanks||load.hasDoubleJump&&4<=load.totalTanks||load.hasHiJump&&load.hasSpeed&&4<=load.totalTanks||load.hasIce&&4<=load.totalTanks)),minor("Energy Tank (HJB)",load=>canAccessRedBrinstar(load)),major("HiJump Boots",load=>canAccessRedBrinstar(load)),major("Ice Beam",load=>canAccessKraid(load)&&(load.hasVaria||2<=load.totalTanks||load.hasHeatShield)),minor("Missiles (Bubble Mountain)",load=>canAccessHeatedNorfair(load)),minor("Missiles (Cathedral)",load=>canAccessHeatedNorfair(load)),minor("Missiles (Croc Escape)",load=>canAccessCrocomire(load)&&(load.canFly||load.hasGrapple||load.hasDoubleJump||load.hasHiJump&&load.hasSpeed)),minor("Missiles (Crumble Shaft)",load=>canAccessKraid(load)&&load.canUsePowerBombs&&canHellRun(load)),minor("Missiles (HJB)",load=>canAccessRedBrinstar(load)),minor("Missiles (Norfair Reserve 1)",load=>canAccessHeatedNorfair(load)),minor("Missiles (Norfair Reserve 2)",load=>canAccessHeatedNorfair(load)),minor("Missiles (Speed)",load=>canAccessHeatedNorfair(load)),minor("Missiles (Wave)",load=>canAccessHeatedNorfair(load)),major("Reserve Tank (Norfair)",load=>canAccessHeatedNorfair(load)),major("Speed Booster",load=>canAccessHeatedNorfair(load)),major("Wave Beam",load=>canAccessHeatedNorfair(load)),major("Energy Tank, Mama Turtle",load=>canAccessWreckedShip(load)&&(load.hasGravity||load.hasPressureValve||load.hasHiJump&&(load.hasIce||load.hasSpringBall))&&(load.canFly||load.hasSpeed||load.hasGrapple||load.hasDoubleJump)),minor("Missiles (Beach)",load=>canAccessWestMaridia(load)),minor("Missiles (Mainstreet)",load=>canAccessWreckedShip(load)&&load.canUsePowerBombs&&(load.hasGravity||load.hasPressureValve)&&load.hasSpeed),minor("Missiles (Mama Turtle)",load=>canAccessWestMaridia(load)),major("Missiles (Watering Hole)",load=>canAccessWestMaridia(load)),minor("Supers (Crab)",load=>canAccessWestMaridia(load)),minor("Supers (Watering Hole)",load=>canAccessWestMaridia(load)),major("Energy Tank, Wrecked Ship",load=>canAccessWreckedShip(load)),major("Gravity Suit",load=>canAccessWreckedShip(load)&&(load.hasVaria&&1<=load.totalTanks||2<=load.totalTanks)),minor("Missiles (Attic)",load=>canAccessWreckedShip(load)),minor("Missiles (Bowling)",load=>canAccessWreckedShip(load)&&(load.hasVaria&&1<=load.totalTanks||2<=load.totalTanks)),minor("Missiles (Ocean Bottom)",load=>canAccessWreckedShip(load)),minor("Missiles (Ocean Middle)",load=>canAccessWreckedShip(load)),major("Missiles (Sky)",load=>canAccessWreckedShip(load)),minor("Missiles (Spooky)",load=>canAccessWreckedShip(load)),major("Reserve Tank (Wrecked Ship)",load=>canAccessWreckedShip(load)&&(load.hasVaria&&1<=load.totalTanks||2<=load.totalTanks)),minor("Supers (WS Left)",load=>canAccessWreckedShip(load)),major("Supers (WS Right)",load=>canAccessWreckedShip(load))}}class BpsPatch{constructor(buffer){this.patchBuffer=buffer}Apply(bytes){if(!BpsPatch.IsBpsPatch(this.patchBuffer))return null;this.patchOffset=4;this.Decode();var targetSize=this.Decode(),metaDataSize=this.Decode(),source=bytes,target=new Uint8Array(targetSize),outputOffset=(0<metaDataSize&&(this.patchOffset+=metaDataSize),0),sourceRelativeOffset=0,targetRelativeOffset=0,eof=this.patchBuffer.length-12;if(!this.VerifyChecksum(source,eof))throw"Source Checksum Mismatch";bytes=this.patchBuffer.slice(0,8+eof);if(!this.VerifyChecksum(bytes,8+eof))throw"Patch Checksum Mismatch";for(;this.patchOffset<eof;){var data=this.Decode(),length=1+(data>>2);switch(3&data){case 0:for(;length--;)target[outputOffset]=source[outputOffset],outputOffset++;break;case 1:for(;length--;)target[outputOffset++]=this.Read();break;case 2:for(sourceRelativeOffset+=(1&(data=this.Decode())?-1:1)*(data>>1);length--;)target[outputOffset++]=source[sourceRelativeOffset++];break;case 3:for(targetRelativeOffset+=(1&(data=this.Decode())?-1:1)*(data>>1);length--;)target[outputOffset++]=target[targetRelativeOffset++]}}if(this.VerifyChecksum(target,4+eof))return target;throw"Target Checksum Mismatch"}static CRC32(buffer){if(void 0===BpsPatch.crcTable){BpsPatch.crcTable=[];for(var n=0;n<256;n++){for(var c=n,k=0;k<8;k++)c=1&c?3988292384^c>>>1:c>>>1;BpsPatch.crcTable[n]=c}}for(var crc=-1,i=0;i<buffer.length;i++)crc=crc>>>8^BpsPatch.crcTable[255&(crc^buffer[i])];return(-1^crc)>>>0}Decode(){for(var data=0,shift=1;;){var x=this.Read();if(data+=(127&x)*shift,0!=(128&x))break;data+=shift<<=7}return data}static IsBpsPatch(bytes){return"BPS1"==new TextDecoder("utf-8").decode(bytes.slice(0,4))}static async Load(FileName){FileName=await(await fetch(FileName)).arrayBuffer(),FileName=new Uint8Array(FileName);return BpsPatch.IsBpsPatch(FileName)?new BpsPatch(FileName):null}Read(){return this.patchBuffer[this.patchOffset++]}VerifyChecksum(bytes,index){bytes=BpsPatch.CRC32(bytes);return(255&bytes)==this.patchBuffer[index]&(bytes>>8&255)==this.patchBuffer[index+1]&(bytes>>16&255)==this.patchBuffer[index+2]&(bytes>>24&255)==this.patchBuffer[index+3]}}class IpsPatch{constructor(buffer){this.hunks=[],this.Process(buffer)}Apply(bytes){var minSize,newBytes;return this.hunks.length<=0?null:(minSize=bytes.length,this.hunks.forEach(function(val,idx){val.GetMinSize()>minSize&&(minSize=val.GetMinSize())}),(newBytes=new Uint8Array(minSize)).set(bytes),this.hunks.forEach(function(val,idex){val.Apply(newBytes)}),newBytes)}Process(buffer){var bytes=new Uint8Array(buffer),buffer=new TextDecoder("utf-8"),start=bytes.slice(0,5);if("PATCH"!=buffer.decode(start))return!1;start=bytes.slice(-3);if("EOF"!=buffer.decode(start))return!1;for(var hunk,PatchIndex=5;null!=(hunk=IpsHunk.Process(bytes,PatchIndex));)this.hunks.push(hunk[0]),PatchIndex=hunk[1];return!0}static async Load(FileName){FileName=await(await fetch(FileName)).arrayBuffer();return new IpsPatch(FileName)}}class IpsHunk{constructor(RLE,Offset,Length,Payload,PayloadIndex){this.rle=RLE,this.offset=Offset,this.length=Length,this.payload=Payload,this.payloadIndex=PayloadIndex}Apply(bytes){if(this.rle)for(var theByte=this.payload[this.payloadIndex],i=0;i<this.length;i++)bytes[this.offset+i]=theByte;else for(i=0;i<this.length;i++)bytes[this.offset+i]=this.payload[this.payloadIndex+i]}GetMinSize(){return this.offset+this.length}static Process(bytes,index){if(index>bytes.length-8)return null;var offset=bytes[index]<<16|bytes[index+1]<<8|bytes[index+2],length=(bytes[index+3]<<8)+bytes[index+4],hunk=(index+=5,null);if(0==length){if(index>bytes.length-6)return null;length=(bytes[index]<<8)+bytes[index+1],hunk=new IpsHunk(!0,offset,length,bytes,index+2),index+=3}else hunk=new IpsHunk(!1,offset,length,bytes,index),index+=length;return[hunk,index]}}const game_modes=[{name:"mm",prefix:"DASH_v11h_SM_",patch:"patches/dash_std.bps",seedAddress:3112960,writeName:!1},{name:"full",prefix:"DASH_v11h_SF_",patch:"patches/dash_std.bps",seedAddress:3112960,writeName:!1},{name:"rm",prefix:"DASH_v11h_RM_",patch:"patches/dash_working.bps",seedAddress:3112960,writeName:!1},{name:"rf",prefix:"DASH_v11h_RF_",patch:"patches/dash_working.bps",seedAddress:3112960,writeName:!1}],encodeRepeating=(patch,offset,length,bytes)=>{patch.push([offset,length,bytes])},encodeBytes=(patch,offset,bytes)=>{encodeRepeating(patch,offset,1,bytes)},generateSeedPatch=(seed,gameMode,nodes,options)=>{let seedPatch=[];var seed=new DotNetRandom(seed),seedInfo1=seed.Next(65535),seed=seed.Next(65535),seedInfo1=new Uint8Array([255&seedInfo1,seedInfo1>>8&255,255&seed,seed>>8&255]);return encodeBytes(seedPatch,gameMode.seedAddress,seedInfo1),nodes.forEach(n=>{var itemBytes=n.location.GetItemBytes(n.item.type);encodeBytes(seedPatch,n.location.address,itemBytes)}),nodes.filter(n=>0<n.item.spoilerAddress).forEach(n=>{var spoilerItem;gameMode.writeName&&(spoilerItem=n.item.spoilerAddress-64,encodeBytes(seedPatch,spoilerItem,itemNameToBytes(n.item.name))),encodeBytes(seedPatch,n.item.spoilerAddress,n.location.GetNameArray())}),null!=options&&encodeBytes(seedPatch,3115787,(seed=options.DisableFanfare,new Uint8Array([255&seed,seed>>8&255]))),seedPatch},getFileName=(seed,prefix,options)=>{let fileName=prefix+seed.toString().padStart(6,"0");return null!=options&&1==options.DisableFanfare&&(fileName+="_no_fan"),fileName+".sfc"},patchRom=(vanillaRom,basePatch,seedPatch)=>{let rom=basePatch.Apply(vanillaRom);return seedPatch.forEach(p=>{var[off,cnt,pay]=p;for(let i=0;i<cnt;i++)rom.set(pay,off+i*pay.length)}),rom},generateFromPreset=preset=>{var timestamp=Math.floor((new Date).getTime()/1e3),timestamp=new DotNetRandom(timestamp).NextInRange(1,1e6);let gameMode=null;if("mm"==preset)gameMode=game_modes.find(mode=>"mm"==mode.name),mode=new ModeStandard(timestamp,getLocations()),logic=new MajorMinorLogic(timestamp,mode.nodes);else{if("full"!=preset)return console.log("UNKNOWN PRESET: "+preset),["",null,""];gameMode=game_modes.find(mode=>"full"==mode.name),mode=new ModeStandard(timestamp,getLocations()),logic=new FullLogic(timestamp,mode.nodes)}logic.placeItems(mode.itemPool);preset=generateSeedPatch(timestamp,gameMode,logic.nodes,null),timestamp=getFileName(timestamp,gameMode.prefix,null);return[gameMode.patch,preset,timestamp]};
